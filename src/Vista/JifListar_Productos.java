/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.DAO_Producto;
import Modelo.DTO_Producto;
import Modelo.Excepciones;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class JifListar_Productos extends javax.swing.JInternalFrame {

    private final DefaultTableModel modelo;
    private JifProducto jifProducto;
    private DTO_Producto objProducto;
    private DAO_Producto objDataProducto;
    private ArrayList<DTO_Producto> productList;
    private Excepciones objExcepciones;

    /**
     * Creates new form JifListar_Productos
     */
    public JifListar_Productos() {
        initComponents();
        this.objExcepciones = new Excepciones();

        //Creamos nuestro diseño de tabla definimos las columnas
        modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        modelo.addColumn("Cod. del producto");
        modelo.addColumn("Nombre");
        modelo.addColumn("Marca");
        modelo.addColumn("Categoría");
        modelo.addColumn("Precio de compra");
        modelo.addColumn("Cantidad");
        modelo.addColumn("% de venta");
        modelo.addColumn("Fecha de carga");
        try {
            this.objDataProducto = new DAO_Producto();
            this.productList = this.objDataProducto.getAllProducts();
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        //asignamos el modelo a nuestro jtable
        this.Tbl_Productos.setModel(modelo);
        this.addRows();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl_Productos = new javax.swing.JTable();
        Btn_Editar = new javax.swing.JButton();
        Btn_Eliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Txt_Search = new javax.swing.JTextField();
        Btn_Buscar = new javax.swing.JButton();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Productos"));

        Tbl_Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tbl_Productos);

        Btn_Editar.setText("Editar");
        Btn_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EditarActionPerformed(evt);
            }
        });

        Btn_Eliminar.setText("Borrar");
        Btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EliminarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre del producto");

        Txt_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_SearchActionPerformed(evt);
            }
        });

        Btn_Buscar.setText("Buscar");
        Btn_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Btn_Editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Btn_Eliminar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Txt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Btn_Buscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Txt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Buscar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Editar)
                    .addComponent(Btn_Eliminar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EditarActionPerformed
        int selected_Row = this.Tbl_Productos.getSelectedRow();
        if (selected_Row >= 0) {
            try {
                JOptionPane.showMessageDialog(this, "Elemento seleccionado: " + this.modelo.getValueAt(selected_Row, 3), "Editar productos", JOptionPane.INFORMATION_MESSAGE);

                this.objProducto = this.objDataProducto.getSingleProducto(this.modelo.getValueAt(selected_Row, 0).toString());
                this.jifProducto = new JifProducto(objProducto, "Editar producto " + this.objProducto.getNombre());
                this.objExcepciones.controlaInstancia(this.jifProducto, this.getDesktopPane());
                jifProducto.setClosable(true);
                jifProducto.setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(JifListar_Productos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un elemento de la lista.", "¡Adventencia!", JOptionPane.WARNING_MESSAGE);
        }
        //System.out.println("Selected: " + this.Tbl_Productos.getSelectedRow());
    }//GEN-LAST:event_Btn_EditarActionPerformed

    private void Btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EliminarActionPerformed
        int selected_Row = this.Tbl_Productos.getSelectedRow();
        if (selected_Row >= 0) {
            int resp = JOptionPane.showConfirmDialog(this,
                    "¿Esta seguro de eliminar el producto " + this.modelo.getValueAt(selected_Row, 1) + "\n"
                    + "Recuerde que esta opción es ireversible.",
                    "Eliminar producto", JOptionPane.WARNING_MESSAGE);
            if (resp == JOptionPane.YES_OPTION) {
                //try {
                //this.objDataProducto.eliminarProducto(this.modelo.getValueAt(selected_Row, 0).toString());
                this.modelo.removeRow(selected_Row);
                //} catch (SQLException ex) {
                //    Logger.getLogger(JifListar_Productos.class.getName()).log(Level.SEVERE, null, ex);
                //}

            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un elemento de la lista.", "¡Adventencia!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_Btn_EliminarActionPerformed

    private void Btn_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarActionPerformed
        this.search();
        this.Txt_Search.setText("");
    }//GEN-LAST:event_Btn_BuscarActionPerformed

    private void Txt_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_SearchActionPerformed
        this.search();
        this.Txt_Search.setText("");
    }//GEN-LAST:event_Txt_SearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Buscar;
    private javax.swing.JButton Btn_Editar;
    private javax.swing.JButton Btn_Eliminar;
    private javax.swing.JTable Tbl_Productos;
    private javax.swing.JTextField Txt_Search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void addRows() {
        this.productList.forEach(product -> {
            this.modelo.addRow(new Object[]{
                product.getId_Producto(),
                product.getNombre(),
                product.getMarca().getNombre(),
                product.getCategoria().getNombre(),
                product.getPrecio_Compra(),
                product.getCantidad(),
                product.getPorcentaje_Venta(),
                product.getFecha_de_Carga().getTimestamp()
            });
        });
    }

    private void search() {
        try {
            this.productList.clear();
            for (int i = this.Tbl_Productos.getRowCount() - 1; i >= 0; i--) {
                this.modelo.removeRow(i);
            }
            this.productList = this.objDataProducto.getProductosByQuery(this.Txt_Search.getText().toUpperCase());
            this.addRows();
        } catch (SQLException ex) {
            Logger.getLogger(JifListar_Productos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
